/*************************************************************************
	> File Name: comp.c 
	> Author: fucang_zxx
	> Mail: fucang_zxx@163.com 
	> Created Time: 2016年07月20日 星期三 16时32分15秒
 ************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <memory.h>
#include <string.h>

int token;  //current token
char *src, *old_src; //pointer to source code string
int poolsize; //default size of text/data/stack
int line;

void next()
{
	token = *src++;
	return;
}

void expression(int level)
{
	//analysis the expression
	
}

void program()
{
	next(); //get next token
	while(token > 0)
	{
		printf("token is: %c\n",token);
		next();
	}
}

int eval()
{
	return 0;
}

int main(int argc, char* argv[])
{
	int i, fd;
	argc--;
	argv++;
	poolsize = 256 * 1025; //arbitary size, need read the size of char
	line = 1;

	if((fd = open(*argv, 0)) < 0)
	{
		//open file fail
		printf("could not open (%s)\n", *argv);
		return -1;
	}

	if((src = old_src = malloc(poolsize)) == NULL)
	{
		printf("could not malloc (%d) for source area\n", poolsize);
		return -1;
	}

	//read the source file
	if((i = read(fd, src, poolsize - 1)) <= 0)
	{
		//ssize_t read(int fd, void* buf, size_t count)
		printf("read() returned %d\n", i);
		return -1;
	}

	src[i] = 0; //add EOF character
	close(fd);

	program();
	return eval();
}
